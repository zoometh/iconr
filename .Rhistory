1+1
install.packages("archdata")
library(archadata)
library(archdata)
View(handaxes)
data("Handaxes")
View(handaxes)
Handaxes
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
?hclust
remove.packages("magrittr", lib="~/R/win-library/4.1")
devtools::install_github("sebastien-plutniak/archeofrag")
install.packages("magrittr")
devtools::install_github("sebastien-plutniak/archeofrag")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RBGL")
devtools::install_github("sebastien-plutniak/archeofrag")
library(archeofrag)
library(archeofrag)
showClass("Frag.object")
data(LiangAbu)
head(fragments.info)
head(cr.df)
data(LiangAbu)
head(cr.df)
head(fragments.info)
head(sr.df)
remove.packages("archeofrag", lib="~/R/win-library/4.1")
install.packages("archeofrag")
library(archeofrag)
showClass("Frag.object")
data(LiangAbu)
head(fragments.info)
head(sr.df)
data(LiangAbu)
View(df.cr)
head(df.sr)
g <- frag.simul.process(n.components=20, vertices=50, disturbance=.15)
frag.graph.plot(g, "layer")
g <- frag.simul.process(n.components=20, vertices=50, disturbance=.15)
frag.graph.plot(g, "layer")
g <- frag.edges.weighting(g, layer.attr="layer")
g
plot(g)
frag.graph.plot(g, "layer")
frag.layers.admixture(g, "layer")
View(df.cr)
View(df.sr)
colnames(df.cr)
colnames(df.sr)
c(1:9)
rep(2, 5)
head(fragments.info)
as.character(colnames(fragments.info))
abu.frag.test <- make_frag_object(cr=df.cr.test, fragments=fragments.info.test)
abu.g.test <- make_cr_graph(abu.frag)
df.cr.test <- data.frame(frg_id1 = c(1, 3, 5, 2, 6),
frg_id2 = c(3, 5, 7, 4, 8)
)
df.sr.test <- data.frame(frg_id = c(1:9),
su_id = c(rep(1, 4), rep(2, 5))
)
fragments.info.test <- data.frame(frg_id = c(1:9),
layer = c(rep(1, 4), rep(2, 5)))
abu.frag.test <- make_frag_object(cr=df.cr.test, fragments=fragments.info.test)
abu.g.test <- make_cr_graph(abu.frag)
abu.frag.test <- make_frag_object(cr=df.cr.test, fragments=fragments.info.test)
abu.g.test <- make_cr_graph(abu.frag.test)
abu.g.test
frag.graph.plot(abu.g.test, "layer")
?make_frag_object
g <- frag.edges.weighting(abu.frag.test, layer.attr="layer")
g <- frag.simul.process(n.components=20, vertices=50, disturbance = .15)
class(g)
class9abu.frag.test
class(abu.frag.test)
frag.graph.plot(abu.g.test, "layer")
frag.relations.by.layers(abu.g.test, "layer")
frag.graph.plot(abu.g.test, layer.attr="layer", main="All layers")
abu.g12.test <- frag.edges.weighting(abu.g.test, layer.attr="layer")
frag.layers.cohesion(abu.g12.test, layer.attr="layer")
df.cr.test <- data.frame(frg_id1 = c(1, 3, 5, 2, 6, 9),
frg_id2 = c(3, 5, 7, 4, 8, 10)
)
df.sr.test <- data.frame(frg_id = c(1:10),
su_id = c(rep(1, 4), rep(2, 6))
)
fragments.info.test <- data.frame(frg_id = c(1:10),
layer = c(rep(1, 4), rep(2, 6)))
abu.frag.test <- make_frag_object(cr=df.cr.test, fragments=fragments.info.test)
abu.g.test <- make_cr_graph(abu.frag.test)
frag.graph.plot(abu.g.test, "layer")
frag.relations.by.layers(abu.g.test, "layer")
abu.g12.test <- frag.edges.weighting(abu.g.test, layer.attr="layer")
frag.layers.cohesion(abu.g12.test, layer.attr="layer")
?frag.edges.weighting
View(fragments.info)
frag.layers.admixture(abu.g12.test, layer.attr="layer")
setwd("c/Rprojects/archeofrag")
setwd("C\:Rprojects\archeofrag")
setwd("C\:Rprojects\archeofrag")
setwd("C/:Rprojects/archeofrag")
getwd()
setwd("C/:/Rprojects/archeofrag")
setwd("C:/Rprojects/archeofrag")
devtools::check()
devtools::check()
library(NCmisc)
list.functions.in.file(rstudioapi::getSourceEditorContext()$path, alphabetic = TRUE)
getAnywhere(frag.cycles)
getAnywhere(frag.diameters())
getAnywhere(frag.edges.weighting())
?is.igraph
devtools::check()
setwd("C:/Rprojects/iconr")
devtools::check()
isS3stdGeneric(frag.cycles)
isS3method(frag.cycles)
isS3stdGeneric(print)
isS3stdGeneric(is.graph)
isS3stdGeneric(is.igraph)
isS3method(is.igraph)
isS3method(igraph::is.igraph)
?isS3method
isS3method("t")
isS3stdGeneric(t)
getwd()
devtools::check()
install.packages("iconr")
library(rlang)
remove.packages("rlang", lib="~/R/win-library/4.1")
install.packages("rlang")
devtools::check()
?aggregate
?as.dist
1 dplyr::%>% + 1
1 %>% + 1
library(dplyr)
1 %>% + 1
?dist
devtools::check()
?as.dist
?write.csv2
devtools::check()
library(iconr)
library(igraph)
library(dplyr)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(
collapse = TRUE,
comment = ">",
fig.pos = 'H'
)
# ibahernando.path <- paste0(getwd(),"/img/ibahernando_256colours.png")
# brozas.path <- paste0(getwd(),"/img/brozas_256colours.png")
# solanas.path <- paste0(getwd(),"/img/solana_detail_256colours.png")
# solanas.vor.path <- paste0(getwd(),"/img/solana_voronoi_256colours.png")
# ibahernando.path <- "img/ibahernando_256colours.png"
# brozas.path <- "img/brozas_256colours.png"
# solanas.path <- "img/solana_detail_256colours.png"
# solanas.vor.path <- "img/solana_voronoi_256colours.png"
ibahernando.path <- "../man/figures/ibahernando_256colours.png"
brozas.path <- "../man/figures/brozas_256colours.png"
solanas.path <- "../man/figures/solana_detail_256colours.png"
solanas.vor.path <- "../man/figures/solana_voronoi_256colours.png"
library(iconr)
dataDir <- system.file("extdata", package = "iconr")
input.files <- list.files(dataDir)
cat(input.files, sep="\n")
imgs_path <- paste0(dataDir, "/imgs.csv")
imgs <- read.table(imgs_path, sep=";", stringsAsFactors = FALSE)
nodes_path <- paste0(dataDir, "/nodes.shp")
nodes.shp <- rgdal::readOGR(dsn = nodes_path, verbose = FALSE)
nodes <- as.data.frame(nodes.shp)
edges_path <- paste0(dataDir, "/edges.shp")
edges.shp <- rgdal::readOGR(dsn = edges_path, verbose = FALSE)
edges <- as.data.frame(edges.shp)
nodes_path <- paste0(dataDir, "/nodes.tsv")
nodes <- read.table(nodes_path, sep="\t", stringsAsFactors = FALSE)
edges_path <- paste0(dataDir, "/edges.tsv")
edges <- read.table(edges_path, sep="\t", stringsAsFactors = FALSE)
lgrph <- list_dec(imgs, nodes, edges)
g <- lgrph[[1]]
as.character(class(g))
oldpar <- par(no.readonly = TRUE)
on.exit(par(oldpar))
par(mar=c(1, 0, 2, 0), mfrow=c(1, 2), cex.main = 0.9, font.main = 1)
coords <- layout.fruchterman.reingold(lgrph[[1]])
plot(g,
vertex.size = 15,
vertex.frame.color="white",
vertex.label.family = "sans",
vertex.label.cex = .8,
main = "Graph drawing based on x, y coordinates"
)
plot(g,
layout = layout.fruchterman.reingold(g),
vertex.size = 5 + degree(g)*10,
vertex.frame.color="white",
vertex.label.family = "sans",
vertex.label.cex = .8,
main = "Force-directed graph drawing,\nwith degree-dependent node size."
)
mtext(g$decor, cex = 1, side = 1, line = -1, outer = TRUE)
imgs_path <- paste0(dataDir, "/imgs.tsv")
imgs <- read.table(imgs_path, sep="\t", stringsAsFactors = FALSE)
knitr::kable(imgs, "html") %>%
kableExtra::kable_styling(full_width = FALSE, position = "center", font_size=12)
df.equi <- data.frame(
"Device/Package" = c("*R graphics*", "*R raster*", "*R magick*", "***GIS interface***"),
"Unit of measure" = c("number of pixels", "number of pixels", "number of pixels", "**number of pixels**"),
"Origin" = c("bottom-left corner", "top-left corner", "top-left corner", "**top-left corner**"),
"x-axis orientation" = c("rightward", "downward", "rightward", "**rightward**"),
"y-axis orientation" = c("upward", "rightward", "downward", "**upward**"),
check.names = FALSE)
knitr::kable(df.equi) %>%
kable_styling(full_width = F)
library(magick)
library(graphics)
dataDir <- system.file("extdata", package = "iconr")
imgs_path <- paste0(dataDir, "/imgs.csv")
imgs <- read.table(imgs_path, sep=";", stringsAsFactors = FALSE)
cm1 <- image_read(paste0(dataDir, "/", imgs$img[1]))
W <- image_info(cm1)$width
H <- image_info(cm1)$height
oldpar <- par(no.readonly = TRUE)
on.exit(par(oldpar))
par(mar = c(0, 0, 0, 0))
plot(cm1)
box(lwd = 2)
text(0, H, paste0(0, ",", 0), cex = 2, adj = c(0, 1.1))
text(W, H, paste0(W, ",", 0), cex = 2, adj = c(1, 1.1))
text(0, 0, paste0(0, ",", -H), cex = 2, adj = c(0, -0.2))
text(W, 0, paste0(W, ",", -H), cex = 2, adj = c(1, -0.2))
nds.df <- read_nds(site = "Cerro Muriano", decor = "Cerro Muriano 1", dir = dataDir)
knitr::kable(nds.df, "html") %>%
kableExtra::kable_styling(full_width = FALSE, position = "center", font_size=12)
edges <- read.table(edges_path, sep = "\t", stringsAsFactors = FALSE)
knitr::kable(head(edges), "html", align = "llccc") %>%
kableExtra::kable_styling(full_width = FALSE, position = "center",
font_size=12) %>%
gsub("\\+", "$+$", .)
eds.df <- read_eds(site = "Cerro Muriano", decor = "Cerro Muriano 1", dir = dataDir)
knitr::kable(head(eds.df), "html", align = "llcccrrrr") %>%
kableExtra::kable_styling(full_width = FALSE, position = "center", font_size=12) %>%
gsub("\\+", "$+$", .)
named_elements(lgrph[[1]], focus = "edges", nd.var="type")[1]
named_elements(lgrph[[4]], focus = "edges", nd.var="type")
all.edges <- unlist(lapply(lgrph, named_elements,
focus = "edges", nd.var="type", disamb.marker=""))
edges.count <- as.data.frame(table(all.edges))
edges.order <- order(edges.count$Freq, decreasing = TRUE)
edges.count <- edges.count[edges.order, ]
knitr::kable(head(edges.count), row.names = FALSE) %>%
kableExtra::kable_styling(full_width = FALSE, position = "center", font_size=12)
dataDir
site <- "Zarza de Montanchez"
decor <- "Zarza De Montanchez"
nds.df <- read_nds(site, decor, dataDir)
eds.df <- read_eds(site, decor, dataDir)
plot_dec_grph(nds.df, eds.df, imgs,
site, decor, dataDir,
ed.lwd = 1, ed.color = c("darkorange"),
lbl.size = 0.7)
devtools::check()
# library(iconr)
library(igraph)
library(dplyr)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(
collapse = TRUE,
comment = ">",
fig.pos = 'H'
)
# ibahernando.path <- paste0(getwd(),"/img/ibahernando_256colours.png")
# brozas.path <- paste0(getwd(),"/img/brozas_256colours.png")
# solanas.path <- paste0(getwd(),"/img/solana_detail_256colours.png")
# solanas.vor.path <- paste0(getwd(),"/img/solana_voronoi_256colours.png")
# ibahernando.path <- "img/ibahernando_256colours.png"
# brozas.path <- "img/brozas_256colours.png"
# solanas.path <- "img/solana_detail_256colours.png"
# solanas.vor.path <- "img/solana_voronoi_256colours.png"
ibahernando.path <- "../man/figures/ibahernando_256colours.png"
brozas.path <- "../man/figures/brozas_256colours.png"
solanas.path <- "../man/figures/solana_detail_256colours.png"
solanas.vor.path <- "../man/figures/solana_voronoi_256colours.png"
library(iconr)
dataDir <- system.file("extdata", package = "iconr")
input.files <- list.files(dataDir)
cat(input.files, sep="\n")
imgs_path <- paste0(dataDir, "/imgs.csv")
imgs <- read.table(imgs_path, sep=";", stringsAsFactors = FALSE)
nodes_path <- paste0(dataDir, "/nodes.shp")
nodes.shp <- rgdal::readOGR(dsn = nodes_path, verbose = FALSE)
nodes <- as.data.frame(nodes.shp)
edges_path <- paste0(dataDir, "/edges.shp")
edges.shp <- rgdal::readOGR(dsn = edges_path, verbose = FALSE)
edges <- as.data.frame(edges.shp)
nodes_path <- paste0(dataDir, "/nodes.tsv")
nodes <- read.table(nodes_path, sep="\t", stringsAsFactors = FALSE)
edges_path <- paste0(dataDir, "/edges.tsv")
edges <- read.table(edges_path, sep="\t", stringsAsFactors = FALSE)
lgrph <- list_dec(imgs, nodes, edges)
g <- lgrph[[1]]
as.character(class(g))
oldpar <- par(no.readonly = TRUE)
on.exit(par(oldpar))
par(mar=c(1, 0, 2, 0), mfrow=c(1, 2), cex.main = 0.9, font.main = 1)
coords <- layout.fruchterman.reingold(lgrph[[1]])
plot(g,
vertex.size = 15,
vertex.frame.color="white",
vertex.label.family = "sans",
vertex.label.cex = .8,
main = "Graph drawing based on x, y coordinates"
)
plot(g,
layout = layout.fruchterman.reingold(g),
vertex.size = 5 + degree(g)*10,
vertex.frame.color="white",
vertex.label.family = "sans",
vertex.label.cex = .8,
main = "Force-directed graph drawing,\nwith degree-dependent node size."
)
mtext(g$decor, cex = 1, side = 1, line = -1, outer = TRUE)
imgs_path <- paste0(dataDir, "/imgs.tsv")
imgs <- read.table(imgs_path, sep="\t", stringsAsFactors = FALSE)
knitr::kable(imgs, "html") %>%
kableExtra::kable_styling(full_width = FALSE, position = "center", font_size=12)
df.equi <- data.frame(
"Device/Package" = c("*R graphics*", "*R raster*", "*R magick*", "***GIS interface***"),
"Unit of measure" = c("number of pixels", "number of pixels", "number of pixels", "**number of pixels**"),
"Origin" = c("bottom-left corner", "top-left corner", "top-left corner", "**top-left corner**"),
"x-axis orientation" = c("rightward", "downward", "rightward", "**rightward**"),
"y-axis orientation" = c("upward", "rightward", "downward", "**upward**"),
check.names = FALSE)
knitr::kable(df.equi) %>%
kable_styling(full_width = F)
library(magick)
library(graphics)
dataDir <- system.file("extdata", package = "iconr")
imgs_path <- paste0(dataDir, "/imgs.csv")
imgs <- read.table(imgs_path, sep=";", stringsAsFactors = FALSE)
cm1 <- image_read(paste0(dataDir, "/", imgs$img[1]))
W <- image_info(cm1)$width
H <- image_info(cm1)$height
oldpar <- par(no.readonly = TRUE)
on.exit(par(oldpar))
par(mar = c(0, 0, 0, 0))
plot(cm1)
box(lwd = 2)
text(0, H, paste0(0, ",", 0), cex = 2, adj = c(0, 1.1))
text(W, H, paste0(W, ",", 0), cex = 2, adj = c(1, 1.1))
text(0, 0, paste0(0, ",", -H), cex = 2, adj = c(0, -0.2))
text(W, 0, paste0(W, ",", -H), cex = 2, adj = c(1, -0.2))
nds.df <- read_nds(site = "Cerro Muriano", decor = "Cerro Muriano 1", dir = dataDir)
knitr::kable(nds.df, "html") %>%
kableExtra::kable_styling(full_width = FALSE, position = "center", font_size=12)
edges <- read.table(edges_path, sep = "\t", stringsAsFactors = FALSE)
knitr::kable(head(edges), "html", align = "llccc") %>%
kableExtra::kable_styling(full_width = FALSE, position = "center",
font_size=12) %>%
gsub("\\+", "$+$", .)
eds.df <- read_eds(site = "Cerro Muriano", decor = "Cerro Muriano 1", dir = dataDir)
knitr::kable(head(eds.df), "html", align = "llcccrrrr") %>%
kableExtra::kable_styling(full_width = FALSE, position = "center", font_size=12) %>%
gsub("\\+", "$+$", .)
named_elements(lgrph[[1]], focus = "edges", nd.var="type")[1]
named_elements(lgrph[[4]], focus = "edges", nd.var="type")
all.edges <- unlist(lapply(lgrph, named_elements,
focus = "edges", nd.var="type", disamb.marker=""))
edges.count <- as.data.frame(table(all.edges))
edges.order <- order(edges.count$Freq, decreasing = TRUE)
edges.count <- edges.count[edges.order, ]
knitr::kable(head(edges.count), row.names = FALSE) %>%
kableExtra::kable_styling(full_width = FALSE, position = "center", font_size=12)
dataDir
site <- "Zarza de Montanchez"
decor <- "Zarza De Montanchez"
nds.df <- read_nds(site, decor, dataDir)
eds.df <- read_eds(site, decor, dataDir)
plot_dec_grph(nds.df, eds.df, imgs,
site, decor, dataDir,
ed.lwd = 1, ed.color = c("darkorange"),
lbl.size = 0.7)
roxygen2::roxygenise()
site <- "Zarza de Montanchez"
decor <- "Zarza De Montanchez"
nds.df <- read_nds(site = site, decor = decor, dir = dataDir)
eds.df <- read_eds(site = site, decor = decor, dir = dataDir)
plot_dec_grph(nds.df, eds.df, imgs,
site, decor, dataDir,
ed.lwd = 1, ed.color = c("darkorange"),
lbl.size = 0.7)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
