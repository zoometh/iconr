1+1
install.packages("archdata")
library(archadata)
library(archdata)
View(handaxes)
data("Handaxes")
View(handaxes)
Handaxes
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
?hclust
remove.packages("magrittr", lib="~/R/win-library/4.1")
devtools::install_github("sebastien-plutniak/archeofrag")
install.packages("magrittr")
devtools::install_github("sebastien-plutniak/archeofrag")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RBGL")
devtools::install_github("sebastien-plutniak/archeofrag")
library(archeofrag)
library(archeofrag)
showClass("Frag.object")
data(LiangAbu)
head(fragments.info)
head(cr.df)
data(LiangAbu)
head(cr.df)
head(fragments.info)
head(sr.df)
remove.packages("archeofrag", lib="~/R/win-library/4.1")
install.packages("archeofrag")
library(archeofrag)
showClass("Frag.object")
data(LiangAbu)
head(fragments.info)
head(sr.df)
data(LiangAbu)
View(df.cr)
head(df.sr)
g <- frag.simul.process(n.components=20, vertices=50, disturbance=.15)
frag.graph.plot(g, "layer")
g <- frag.simul.process(n.components=20, vertices=50, disturbance=.15)
frag.graph.plot(g, "layer")
g <- frag.edges.weighting(g, layer.attr="layer")
g
plot(g)
frag.graph.plot(g, "layer")
frag.layers.admixture(g, "layer")
View(df.cr)
View(df.sr)
colnames(df.cr)
colnames(df.sr)
c(1:9)
rep(2, 5)
head(fragments.info)
as.character(colnames(fragments.info))
abu.frag.test <- make_frag_object(cr=df.cr.test, fragments=fragments.info.test)
abu.g.test <- make_cr_graph(abu.frag)
df.cr.test <- data.frame(frg_id1 = c(1, 3, 5, 2, 6),
frg_id2 = c(3, 5, 7, 4, 8)
)
df.sr.test <- data.frame(frg_id = c(1:9),
su_id = c(rep(1, 4), rep(2, 5))
)
fragments.info.test <- data.frame(frg_id = c(1:9),
layer = c(rep(1, 4), rep(2, 5)))
abu.frag.test <- make_frag_object(cr=df.cr.test, fragments=fragments.info.test)
abu.g.test <- make_cr_graph(abu.frag)
abu.frag.test <- make_frag_object(cr=df.cr.test, fragments=fragments.info.test)
abu.g.test <- make_cr_graph(abu.frag.test)
abu.g.test
frag.graph.plot(abu.g.test, "layer")
?make_frag_object
g <- frag.edges.weighting(abu.frag.test, layer.attr="layer")
g <- frag.simul.process(n.components=20, vertices=50, disturbance = .15)
class(g)
class9abu.frag.test
class(abu.frag.test)
frag.graph.plot(abu.g.test, "layer")
frag.relations.by.layers(abu.g.test, "layer")
frag.graph.plot(abu.g.test, layer.attr="layer", main="All layers")
abu.g12.test <- frag.edges.weighting(abu.g.test, layer.attr="layer")
frag.layers.cohesion(abu.g12.test, layer.attr="layer")
df.cr.test <- data.frame(frg_id1 = c(1, 3, 5, 2, 6, 9),
frg_id2 = c(3, 5, 7, 4, 8, 10)
)
df.sr.test <- data.frame(frg_id = c(1:10),
su_id = c(rep(1, 4), rep(2, 6))
)
fragments.info.test <- data.frame(frg_id = c(1:10),
layer = c(rep(1, 4), rep(2, 6)))
abu.frag.test <- make_frag_object(cr=df.cr.test, fragments=fragments.info.test)
abu.g.test <- make_cr_graph(abu.frag.test)
frag.graph.plot(abu.g.test, "layer")
frag.relations.by.layers(abu.g.test, "layer")
abu.g12.test <- frag.edges.weighting(abu.g.test, layer.attr="layer")
frag.layers.cohesion(abu.g12.test, layer.attr="layer")
?frag.edges.weighting
View(fragments.info)
frag.layers.admixture(abu.g12.test, layer.attr="layer")
setwd("c/Rprojects/archeofrag")
setwd("C\:Rprojects\archeofrag")
setwd("C\:Rprojects\archeofrag")
setwd("C/:Rprojects/archeofrag")
getwd()
setwd("C/:/Rprojects/archeofrag")
setwd("C:/Rprojects/archeofrag")
devtools::check()
devtools::check()
library(NCmisc)
list.functions.in.file(rstudioapi::getSourceEditorContext()$path, alphabetic = TRUE)
getAnywhere(frag.cycles)
getAnywhere(frag.diameters())
getAnywhere(frag.edges.weighting())
?is.igraph
devtools::check()
setwd("C:/Rprojects/iconr")
devtools::check()
isS3stdGeneric(frag.cycles)
isS3method(frag.cycles)
isS3stdGeneric(print)
isS3stdGeneric(is.graph)
isS3stdGeneric(is.igraph)
isS3method(is.igraph)
isS3method(igraph::is.igraph)
?isS3method
isS3method("t")
isS3stdGeneric(t)
